---
# -----------------------------------------------------------------------------
# Load application definition
# -----------------------------------------------------------------------------
- name: Load application definition
  hosts: localhost
  connection: local

  vars:
    application_definition_path: '../../infrastructure/definitions/{{ application }}.yml'


    # application definition roles
    application_definition_roles: '{{ application_definition.application.roles }}'

    # default application definition
    application_definition_role_default: >-
      {{ application_definition_roles.default | default({}) }}

    # application definition locations
    application_definition_locations: '{{ application_definition.application.locations }}'

  tasks:

    # -----------------------------------------------------------------------------
    # Assert playbook execution
    # -----------------------------------------------------------------------------
    - name: Assert playbook execution
      block:
        # Check mandatory variables
        - name: Check mandatory variables
          assert:
              that:
                - application is defined
              fail_msg: "Missing mandatory variables"

        # Check application definition file exists
        - name: Check application definition file exists
          assert:
              that:
                - lookup('file', application_definition_path, errors='ignore') != none
              fail_msg: "Missing application definition file {{ application_definition_path }}"

    # -----------------------------------------------------------------------------
    # Load application definition and check the structure
    # -----------------------------------------------------------------------------
    - name: Load application definition and check the structure
      block:
        # Load application definition
        - name: Load application definition
          include_vars:
            file: '{{ application_definition_path }}'
            name: application_definition
          tags:
            - always

        # Check default structure
        - name: Check default structure
          assert:
              that:
                - application_definition.application is defined
                - application_definition.application.roles is defined
                - application_definition.application.roles.keys() | length > 0
                - application_definition.application.locations.keys() | length > 0
                - application_definition.environments is defined
                - application_definition.environments.keys() | length > 0
              fail_msg: "Default structure is incorrect"

        # Check environments structure
        - name: Check environments structure
          assert:
              that:
                - item.value.servers is defined
                - item.value.servers | length > 0
              fail_msg: "Missing servers defintions in environment {{ item.key }}"
          loop: '{{ application_definition.environments | dict2items }}'

    # -----------------------------------------------------------------------------
    # Create the definition for each server
    # -----------------------------------------------------------------------------
    - name: Create the definition for each server
      block:
        - name: Select servers
          set_fact:
            application_servers_selected: "{{ application_servers_selected |
                                              default({}) |
                                              combine(my_servers)
                                          }}"
          loop: "{{ application_definition.environments |
                    dict2items | json_query('[*].{key: key, value: value.servers}')
                 }}"
          vars:
            my_env: '{{ item.key }}'
            my_servers: >-
              {%- set servers={} -%}
              {%- for server_name, server in item.value.iteritems() -%}
                {%- do servers.update( {server_name: server
                                        | combine({ "server_environment": item.key })
                                        | combine(application_definition_role_default)
                                        | combine( application_definition_roles[server.server_role] | default({}))
                                       }
                                     )
                -%}
              {%- endfor -%}
              {{ servers }}



        - debug:
            var: application_servers_selected

      tags:
        - test
