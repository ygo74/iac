trigger:
  branches:
    include:
    - master
    - infra/*
  paths:
    include:
    - infrastructure/*
    exclude:
    - /**/*.md

jobs:
- job: BuildInfrastructure
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:

  # Checkout the repository and keep git credential
  - checkout:           self
    clean:              true
    submodules:         true
    persistCredentials: true

  - task: Bash@3
    inputs:
        targetType:       'inline'
        workingDirectory: 'tools/ansible'
        script: |
          export
    displayName: 'Export variables'


  - task: UsePythonVersion@0
    inputs:
        versionSpec:  '2.7'
        architecture: 'x64'

  # - task: AzureKeyVault@1
  #   inputs:
  #     azureSubscription: 'Visual Studio Enterprise (62177529-73f0-4e11-a584-5d3526dc6999)'
  #     keyVaultName:  'mesfVault'
  #     secretsFilter: 'Ansible-Automation'

  - task: Bash@3
    inputs:
        targetType: 'inline'
        script: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install virtualenv
          python -m virtualenv ansible-2.9.6
          source ansible-2.9.6/bin/activate
          python -m pip install -r tools/ansible/venv_requirements.txt
          sudo apt-get install dos2unix
    displayName: 'Install tools'

  - task: Bash@3
    inputs:
        targetType:       'inline'
        workingDirectory: 'tools/ansible'
        script: |
          source ../../ansible-2.9.6/bin/activate
          ansible-playbook 00-generate-application-servers.yml -e application=app1
    displayName: 'Execute ansible'
    condition:   and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

  - task: Bash@3
    inputs:
        targetType:       'inline'
        workingDirectory: '.'
        script: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git checkout -b infra/app1
          git ls-files infrastructure/generated -o --exclude-standard | xargs -i git add '{}'
          git add infrastructure/generated
          git status
          git commit -m "Automatic Generated servers [skip ci]"
         # git push origin HEAD:<name-of-remote-branch>
    displayName: 'Commit application server generations'
    condition:   and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
